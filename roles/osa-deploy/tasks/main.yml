---
## Note - the creates setting does not appear to work for shell so need to add a test prior to running

- name: Check Boostrap Status
  stat:
    path: /opt/ansible-runtime/bin/
  register: bootstrap
  tags: 
    - bootstrap-ansible

- name: Bootstrap Ansible
  shell: ./scripts/bootstrap-ansible.sh
  args:
    chdir: /opt/openstack-ansible
  when: boostrap.stat.isdir is defined and boostrap.stat.isdir == false
  tags: 
    - bootstrap-ansible

# Copy the contencts of /opt/openstack-ansible/etc/openstack_deploy to /etc/ - note there is no ansible module which
# can recursively copy folders and their content within the same host so we have to rsync

- name: Set Fact
  set_fact:
    rsync_dry_run: "--dry-run"
  when: ansible_check_mode
  tags: 
    - rsync

# Check to see if the user_secrets has already been populated
- name: Check user_secrets
  shell: "grep keystone_auth_admin_password /etc/openstack_deploy/user_secrets.yml | awk '{print $2}'"
  register: user_secrets
  no_log: true
  tags: 
    - rsync 

- debug:
    var: user_secrets
    verbosity: 2
  tags: 
    - rsync

- name: Copy openstack_deploy to etc
  shell: rsync --itemize-changes --archive {{ rsync_dry_run | default('') }} /opt/openstack-ansible/etc/openstack_deploy /etc/
  check_mode: no
  register: rsync_result
  changed_when: rsync_result.stdout != ''
  when: user_secrets.stdout == ""
  tags: 
    - rsync

- name: Create openstack_user_config.yml from template
  template:
    src: files/openstack_user_config.yml
    dest: /etc/openstack_deploy/openstack_user_config.yml
    backup: yes
  tags:
    - user_config

# Check to see if the user_secrets has already been populated
- name: Check user_secrets
  shell: "grep keystone_auth_admin_password /etc/openstack_deploy/user_secrets.yml | awk '{print $2}'"
  register: user_secrets
  no_log: true
  tags: 
    - user_secrets

- debug:
    var: user_secrets
    verbosity: 2
  tags: 
    - user_secrets

- name: Generate User Secrets
  shell: python pw-token-gen.py --file /etc/openstack_deploy/user_secrets.yml
  args:
    chdir: /opt/openstack-ansible/scripts
  when: user_secrets.stdout == ""
  tags: 
    - user_secrets

- name: Create user_variables.yml from template
  template:
    src: files/user_variables.yml
    dest: /etc/openstack_deploy/user_variables.yml
    backup: yes
  tags:
    - user_variables

- name: Run setup-hosts.yml
  shell: ansible-playbook setup-hosts.yml
  args:
    chdir: /opt/openstack-ansible/playbooks
    creates: /var/log/lxc
  tags: 
    - setup_hosts
